{"version":3,"sources":["components/NavBar.jsx","components/login.jsx","components/administrare/UpdatareInformatii.jsx","App.js","serviceWorker.js","reducers/authReducer.js","reducers/rootReducer.js","index.js"],"names":["withRouter","props","console","log","react_default","a","createElement","className","react_router_dom","to","src","alt","data-toggle","role","Login","state","username","password","auth","handleSubmit","e","preventDefault","document","getElementById","value","handleChange","_this","setState","Object","defineProperty","target","id","handleClose","history","push","onClick","this","onSubmit","type","placeholder","onChange","htmlFor","Component","UpdatareInformatii","App","localStorage","setItem","sessionStorage","components_NavBar","react_router","exact","path","component","Boolean","window","location","hostname","match","initState","credentials","authReducer","arguments","length","undefined","assign","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.806185b6.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link, NavLink, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst NavBar = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <nav className=\"navbar navbar-default\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"navbar-header\">\r\n          <Link to=\"/\" className=\"navbar-brand\">\r\n            <img src=\"../img/unicarm_logo.png\" className=\"img img-rounded img-responsive\" alt=\"Unicarm logo\" />\r\n            <span className=\"logo\">Unicarm Printer Monitor</span>\r\n          </Link>\r\n        </div>\r\n\r\n        <ul className=\"nav navbar-nav navbar-center\">\r\n\r\n          <li className=\"dropdown\">\r\n            <NavLink className=\"dropdown-toggle\" data-toggle=\"dropdown\" to=\"/\"><span>Administrare</span>&nbsp;<span className=\"caret\"></span></NavLink>\r\n            <ul className=\"dropdown-menu\">\r\n              <li className=\"dropdown-header\">Updatare</li>\r\n              <li><Link to=\"/UpdatareInformatii\">Updatare Informatii</Link></li>\r\n              <li><Link to=\"/Administrare\">Updatare Status Imprimanta</Link></li>\r\n              <li role=\"separator\" className=\"divider\"></li>\r\n              <li className=\"dropdown-header\">Introducere Informatii</li>\r\n              <li><Link to=\"/Administrare\">Introducere Imprimanta Noua</Link></li>\r\n              <li><Link to=\"/Administrare\">Introducere Magazin Nou</Link></li>\r\n              <li><Link to=\"/Administrare\">Introducere User Nou</Link></li>\r\n              <li><Link to=\"/Administrare\">Introducere Reparatie</Link></li>\r\n              <li role=\"separator\" className=\"divider\"></li>\r\n              <li className=\"dropdown-header\">Vizualizare Date</li>\r\n              <li><Link to=\"/Administrare\">Vizualizare Listare Magazine</Link></li>\r\n              <li><Link to=\"/Administrare\">Vizualizare Listare Useri</Link></li>\r\n              <li><Link to=\"/Administrare\">Vizualizare Listare Imprimante</Link></li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li className=\"dropdown\">\r\n            <NavLink className=\"dropdown-toggle\" data-toggle=\"dropdown\" to=\"/\"><span>Probleme Imprimante</span>&nbsp;<span className=\"caret\"></span></NavLink>\r\n            <ul className=\"dropdown-menu bold\">\r\n              <li className=\"dropdown-header\">Sesizeaza o problema</li>\r\n              <li><Link to=\"/\">Sesizare Problema Noua</Link></li>\r\n              <li><Link to=\"/\">Anulare Sesizare</Link></li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li className=\"dropdown\">\r\n            <NavLink className=\"dropdown-toggle\" data-toggle=\"dropdown\" to=\"/\"><span>Rapoarte</span>&nbsp;<span className=\"caret\"></span></NavLink>\r\n            <ul className=\"dropdown-menu bold\">\r\n              <li className=\"dropdown-header\">Vizializare Rapoarte</li>\r\n              <li><Link to=\"/\">Pret reparatii per imprimante</Link></li>\r\n              <li><Link to=\"/\">Unde a fost imprimanta pana acuma</Link></li>\r\n              <li><Link to=\"/\">Un magazin ce imprimante a avut pana acuma</Link></li>\r\n              <li><Link to=\"/\">Un magazin ce probleme a avut la imprimante</Link></li>\r\n              <li><Link to=\"/\">Pret reparatii per magazin</Link></li>\r\n              <li><Link to=\"/\">Istorie reparatii imprimante </Link></li>\r\n              <li><Link to=\"/\">Ce probleme a avut imprimanta pana acuma</Link></li>\r\n            </ul>\r\n          </li>\r\n\r\n        </ul>\r\n\r\n        <ul className=\"nav navbar-nav navbar-right\">\r\n          <li><Link to=\"/Login\"><span className=\"glyphicon glyphicon-user\"></span> &nbsp;Log In</Link></li>\r\n          <li><Link to=\"/\"><span className=\"glyphicon glyphicon-log-in\"></span> &nbsp;Log Out</Link></li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n\r\n  )\r\n}\r\n\r\nexport default withRouter(NavBar)\r\n","import React, { Component } from 'react'\r\nimport './component_style/Login.css'\r\n// import { connect } from 'react-redux'\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        username: \"\",\r\n        password: \"\",\r\n        auth: \"\"\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        document.getElementById(\"username\").value = \"\";\r\n        document.getElementById(\"password\").value = \"\";\r\n        // this.props.checkAuth(this.state);\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleClose = (e) => {\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"popup\">\r\n                <div className=\"wrapper-login\">\r\n                    <div className=\"x\" onClick={this.handleClose}>X</div>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"username\" placeholder=\"User\" onChange={this.handleChange} />\r\n                            <label className=\"labelControl\" htmlFor=\"username\" >User</label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Parola\" onChange={this.handleChange} />\r\n                            <label className=\"labelControl\" htmlFor=\"password\" >Parola</label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"center\">\r\n                                <button type=\"submit\" className=\"btn btn-default\" onClick={this.handleSubmit}>Login</button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default Login;\r\n","import React from 'react'\r\nimport './administrare.css'\r\nconst UpdatareInformatii = (props) => {\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 jumbotron\">\r\n                    <h1>Updatare Informatii</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdatareInformatii\r\n\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n// import Home from './components/Home.jsx'\nimport NavBar from './components/NavBar.jsx'\nimport Login from './components/login'\nimport UpdatareInformatii from './components/administrare/UpdatareInformatii'\n\n\n\nclass App extends Component {\n  render() {\n    localStorage.setItem(\"username\", \"G2\");\n    sessionStorage.setItem(\"username\", \"test\");\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route exact path=\"/UpdatareInformatii\" component={UpdatareInformatii} />\n            <Route path=\"/Login\" component={Login} />\n            {/* <Route path=\"/:post_id\" component={Projects} /> */}\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    credentials: { username: \"\", password: \"\" }\r\n}\r\nconst authReducer = (state = initState, action) => {\r\n    //onsole.log(\"here is the reducer\", action);\r\n    const newstate = Object.assign({}, state);\r\n    return newstate;\r\n}\r\nexport default authReducer;","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer'\r\n\r\n\r\nconst rootReducer = combineReducers({ auth: authReducer });\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducers/rootReducer'\nimport thunk from 'redux-thunk'\n\n\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}